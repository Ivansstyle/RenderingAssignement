OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface rust_surface
param	color	Cin	1 1 1		%read{27,27} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{27,27}
global	point	P	%read{3,7} %write{2147483647,-1}
global	float	u	%read{6,13} %write{2147483647,-1}
global	float	v	%read{11,15} %write{2147483647,-1}
local	float	noise_level	%read{18,18} %write{0,0}
local	float	noise_fuzz	%read{23,24} %write{1,1}
local	float	blend_val	%read{26,26} %write{2,2}
local	float	s	%read{20,20} %write{6,6}
local	float	t	%read{21,21} %write{11,11}
local	color	rust	%read{19,19} %write{12,12}
local	color	noisy_rust	%read{26,26} %write{19,19}
local	float	n	%read{25,27} %write{22,25}
const	float	$const1	0.050000001		%read{0,0} %write{2147483647,-1}
const	float	$const2	0.40000001		%read{1,1} %write{2147483647,-1}
const	float	$const3	1		%read{2,2} %write{2147483647,-1}
temp	float	$tmp1	%read{5,5} %write{4,4}
const	string	$const4	"uperlin"		%read{4,22} %write{2147483647,-1}
temp	point	$tmp2	%read{4,4} %write{3,3}
const	float	$const6	2		%read{3,7} %write{2147483647,-1}
const	float	$const7	0.5		%read{5,21} %write{2147483647,-1}
temp	float	$tmp3	%read{6,6} %write{5,5}
temp	float	$tmp4	%read{10,10} %write{9,9}
temp	point	$tmp5	%read{8,8} %write{7,7}
const	point	$const8	100 100 100		%read{8,8} %write{2147483647,-1}
temp	point	$tmp7	%read{9,9} %write{8,8}
temp	float	$tmp8	%read{11,11} %write{10,10}
const	color	$const9	0.14901961 0.094117649 0.090196081		%read{12,12} %write{2147483647,-1}
temp	float	$tmp9	%read{18,18} %write{17,17}
const	string	$const10	"simplex"		%read{17,17} %write{2147483647,-1}
temp	float	$tmp10	%read{14,14} %write{13,13}
const	float	$const12	10		%read{13,13} %write{2147483647,-1}
temp	float	$tmp11	%read{17,17} %write{14,14}
const	float	$const14	40		%read{14,14} %write{2147483647,-1}
temp	float	$tmp12	%read{16,16} %write{15,15}
const	float	$const16	3		%read{15,20} %write{2147483647,-1}
temp	float	$tmp13	%read{17,17} %write{16,16}
const	float	$const18	30		%read{16,16} %write{2147483647,-1}
temp	float	$tmp14	%read{19,19} %write{18,18}
temp	float	$tmp15	%read{22,22} %write{20,20}
temp	float	$tmp16	%read{22,22} %write{21,21}
const	float	$const19	0		%read{23,23} %write{2147483647,-1}
temp	float	$tmp17	%read{25,25} %write{23,23}
const	float	$const20	0.15000001		%read{24,24} %write{2147483647,-1}
temp	float	$tmp18	%read{25,25} %write{24,24}
temp	color	$tmp19	%read{27,27} %write{26,26}
code ___main___
# rust_surface.osl:5
#     float noise_level = 0.05;    
	assign		noise_level $const1 	%filename{"rust_surface.osl"} %line{5} %argrw{"wr"}
# rust_surface.osl:6
#     float noise_fuzz = 0.4;
	assign		noise_fuzz $const2 	%line{6} %argrw{"wr"}
# rust_surface.osl:7
#     float blend_val = 1.0;
	assign		blend_val $const3 	%line{7} %argrw{"wr"}
# rust_surface.osl:10
#     float s=u+(float)noise("uperlin",P*2)*0.5;
	mul		$tmp2 P $const6 	%line{10} %argrw{"wrr"}
	noise		$tmp1 $const4 $tmp2 	%argrw{"wrr"}
	mul		$tmp3 $tmp1 $const7 	%argrw{"wrr"}
	add		s u $tmp3 	%argrw{"wrr"}
# rust_surface.osl:11
#     float t=v+(float)noise("uperlin",P*2+point(100,100,100))*0.5;
	mul		$tmp5 P $const6 	%line{11} %argrw{"wrr"}
	add		$tmp7 $tmp5 $const8 	%argrw{"wrr"}
	noise		$tmp4 $const4 $tmp7 	%argrw{"wrr"}
	mul		$tmp8 $tmp4 $const7 	%argrw{"wrr"}
	add		t v $tmp8 	%argrw{"wrr"}
# rust_surface.osl:12
#     color rust=color(0.149019608, 0.094117647, 0.090196078);
	assign		rust $const9 	%line{12} %argrw{"wr"}
# rust_surface.osl:13
#     color noisy_rust = rust - (float)noise("simplex",(u+10)*40, (v-3)*30)*noise_level; 
	add		$tmp10 u $const12 	%line{13} %argrw{"wrr"}
	mul		$tmp11 $tmp10 $const14 	%argrw{"wrr"}
	sub		$tmp12 v $const16 	%argrw{"wrr"}
	mul		$tmp13 $tmp12 $const18 	%argrw{"wrr"}
	noise		$tmp9 $const10 $tmp11 $tmp13 	%argrw{"wrrr"}
	mul		$tmp14 $tmp9 noise_level 	%argrw{"wrr"}
	sub		noisy_rust rust $tmp14 	%argrw{"wrr"}
# rust_surface.osl:15
#     float n=(float)noise("uperlin",s*3,t*0.5);
	mul		$tmp15 s $const16 	%line{15} %argrw{"wrr"}
	mul		$tmp16 t $const7 	%argrw{"wrr"}
	noise		n $const4 $tmp15 $tmp16 	%argrw{"wrrr"}
# rust_surface.osl:16
#     n=smoothstep(0.0 + noise_fuzz,0.15 + noise_fuzz,n);
	add		$tmp17 $const19 noise_fuzz 	%line{16} %argrw{"wrr"}
	add		$tmp18 $const20 noise_fuzz 	%argrw{"wrr"}
	smoothstep	n $tmp17 $tmp18 n 	%argrw{"wrrr"}
# rust_surface.osl:17
#     Cout=mix(noisy_rust * blend_val,Cin,n);
	mul		$tmp19 noisy_rust blend_val 	%line{17} %argrw{"wrr"}
	mix		Cout $tmp19 Cin n 	%argrw{"wrrr"}
	end
