OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
shader scratches
oparam	float	roughness	1		%read{2147483647,-1} %write{29,29}
global	point	P	%read{16,20} %write{2147483647,-1}
global	float	u	%read{2,19} %write{2147483647,-1} %derivs
global	float	v	%read{3,24} %write{2147483647,-1} %derivs
local	float	noiseControl	%read{5,14} %write{0,0}
local	float	gain	%read{8,8} %write{1,1}
local	float	scratch	%read{7,29} %write{4,15}
local	float	intermid_roughness	%read{29,29} %write{8,8}
local	float	s	%read{25,25} %write{19,19}
local	float	t	%read{26,26} %write{24,24}
local	float	mix_noise	%read{29,29} %write{27,28}
const	float	$const1	0.2		%read{0,0} %write{2147483647,-1}
const	float	$const2	0.30000001		%read{1,28} %write{2147483647,-1}
const	string	$const3	"uperlin"		%read{4,27} %write{2147483647,-1}
temp	float	$tmp1	%read{4,4} %write{2,2}
const	float	$const5	30		%read{2,25} %write{2147483647,-1}
temp	float	$tmp2	%read{4,4} %write{3,3}
const	float	$const7	300		%read{3,3} %write{2147483647,-1}
const	float	$const8	0		%read{5,5} %write{2147483647,-1}
temp	float	$tmp3	%read{7,7} %write{5,5}
temp	float	$tmp4	%read{7,7} %write{6,6}
temp	float	$tmp5	%read{12,12} %write{11,11}
const	string	$const9	"gabor"		%read{11,11} %write{2147483647,-1}
temp	float	$tmp6	%read{11,11} %write{9,9} %derivs
const	float	$const11	1		%read{9,10} %write{2147483647,-1}
temp	float	$tmp7	%read{11,11} %write{10,10} %derivs
temp	float	$tmp8	%read{15,15} %write{13,13}
const	float	$const12	0.69999999		%read{14,14} %write{2147483647,-1}
temp	float	$tmp9	%read{15,15} %write{14,14}
temp	float	$tmp10	%read{18,18} %write{17,17}
temp	point	$tmp11	%read{17,17} %write{16,16}
const	float	$const14	2		%read{16,20} %write{2147483647,-1}
const	float	$const15	0.5		%read{18,23} %write{2147483647,-1}
temp	float	$tmp12	%read{19,19} %write{18,18}
temp	float	$tmp13	%read{23,23} %write{22,22}
temp	point	$tmp14	%read{21,21} %write{20,20}
const	point	$const16	30 230 331		%read{21,21} %write{2147483647,-1}
temp	point	$tmp16	%read{22,22} %write{21,21}
temp	float	$tmp17	%read{24,24} %write{23,23}
temp	float	$tmp18	%read{27,27} %write{25,25}
temp	float	$tmp19	%read{27,27} %write{26,26}
const	float	$const18	10		%read{26,26} %write{2147483647,-1}
const	float	$const19	0.40000001		%read{28,28} %write{2147483647,-1}
code ___main___
# scratches.osl:6
#     float noiseControl = 0.2;
	assign		noiseControl $const1 	%filename{"scratches.osl"} %line{6} %argrw{"wr"}
# scratches.osl:7
#     float gain = 0.3;
	assign		gain $const2 	%line{7} %argrw{"wr"}
# scratches.osl:9
#     float scratch = (float)noise("uperlin",u*30,v*300);
	mul		$tmp1 u $const5 	%line{9} %argrw{"wrr"}
	mul		$tmp2 v $const7 	%argrw{"wrr"}
	noise		scratch $const3 $tmp1 $tmp2 	%argrw{"wrrr"}
# scratches.osl:10
#     scratch = smoothstep(0.0 + noiseControl, 0.30 + noiseControl, scratch);
	add		$tmp3 $const8 noiseControl 	%line{10} %argrw{"wrr"}
	add		$tmp4 $const2 noiseControl 	%argrw{"wrr"}
	smoothstep	scratch $tmp3 $tmp4 scratch 	%argrw{"wrrr"}
# scratches.osl:11
#     float intermid_roughness= scratch * gain;
	mul		intermid_roughness scratch gain 	%line{11} %argrw{"wrr"}
# scratches.osl:13
#     scratch = abs((float)noise("gabor",u*1,v*1));
	mul		$tmp6 u $const11 	%line{13} %argrw{"wrr"}
	mul		$tmp7 v $const11 	%argrw{"wrr"}
	noise		$tmp5 $const9 $tmp6 $tmp7 	%argrw{"wrrr"} %argderivs{2,3}
	abs		scratch $tmp5 	%argrw{"wr"}
# scratches.osl:14
#     scratch = smoothstep(0.3 + noiseControl, 0.7 + noiseControl, scratch);
	add		$tmp8 $const2 noiseControl 	%line{14} %argrw{"wrr"}
	add		$tmp9 $const12 noiseControl 	%argrw{"wrr"}
	smoothstep	scratch $tmp8 $tmp9 scratch 	%argrw{"wrrr"}
# scratches.osl:16
#     float s=u+(float)noise("uperlin",P*2)*0.5;
	mul		$tmp11 P $const14 	%line{16} %argrw{"wrr"}
	noise		$tmp10 $const3 $tmp11 	%argrw{"wrr"}
	mul		$tmp12 $tmp10 $const15 	%argrw{"wrr"}
	add		s u $tmp12 	%argrw{"wrr"}
# scratches.osl:17
#     float t=v+(float)noise("uperlin",P*2+point(30,230,331))*0.5;
	mul		$tmp14 P $const14 	%line{17} %argrw{"wrr"}
	add		$tmp16 $tmp14 $const16 	%argrw{"wrr"}
	noise		$tmp13 $const3 $tmp16 	%argrw{"wrr"}
	mul		$tmp17 $tmp13 $const15 	%argrw{"wrr"}
	add		t v $tmp17 	%argrw{"wrr"}
# scratches.osl:19
#     float mix_noise = (float)noise("uperlin",s*30,t*10);
	mul		$tmp18 s $const5 	%line{19} %argrw{"wrr"}
	mul		$tmp19 t $const18 	%argrw{"wrr"}
	noise		mix_noise $const3 $tmp18 $tmp19 	%argrw{"wrrr"}
# scratches.osl:20
#     mix_noise =  smoothstep(0.3, 0.4, scratch);
	smoothstep	mix_noise $const2 $const19 scratch 	%line{20} %argrw{"wrrr"}
# scratches.osl:21
#     roughness = mix(intermid_roughness, scratch, mix_noise);
	mix		roughness intermid_roughness scratch mix_noise 	%line{21} %argrw{"wrrr"}
	end
