OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface rust_noise
param	color	Cin	1 1 1		%read{2147483647,-1} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{2147483647,-1} %write{8,8}
global	float	u	%read{2,2} %write{2147483647,-1}
global	float	v	%read{3,3} %write{2147483647,-1}
local	float	uMult	%read{2,2} %write{0,0}
local	float	vMult	%read{3,3} %write{1,1}
local	color	noise_color	%read{8,8} %write{7,7}
const	float	$const1	5		%read{0,1} %write{2147483647,-1}
temp	float	$tmp1	%read{7,7} %write{6,6}
const	float	$const2	0.5		%read{5,5} %write{2147483647,-1}
temp	float	$tmp2	%read{5,5} %write{4,4}
const	string	$const3	"simplex"		%read{4,4} %write{2147483647,-1}
temp	float	$tmp3	%read{4,4} %write{2,2}
temp	float	$tmp4	%read{4,4} %write{3,3}
temp	float	$tmp5	%read{6,6} %write{5,5}
code ___main___
# rust_noise.osl:6
#     float uMult = 5.0;
	assign		uMult $const1 	%filename{"rust_noise.osl"} %line{6} %argrw{"wr"}
# rust_noise.osl:7
#     float vMult = 5.0;
	assign		vMult $const1 	%line{7} %argrw{"wr"}
# rust_noise.osl:8
#     color noise_color=abs(0.5*noise("simplex",u*uMult,v*vMult)); 
	mul		$tmp3 u uMult 	%line{8} %argrw{"wrr"}
	mul		$tmp4 v vMult 	%argrw{"wrr"}
	noise		$tmp2 $const3 $tmp3 $tmp4 	%argrw{"wrrr"}
	mul		$tmp5 $const2 $tmp2 	%argrw{"wrr"}
	abs		$tmp1 $tmp5 	%argrw{"wr"}
	assign		noise_color $tmp1 	%argrw{"wr"}
# rust_noise.osl:10
#     Cout=noise_color;
	assign		Cout noise_color 	%line{10} %argrw{"wr"}
	end
